apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion target_sdk_version
    defaultConfig {
        applicationId "moe.haruue.ep.manager"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode version_code
        versionName version_name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled true
    }
    signingConfigs {
        sign
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.sign
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation "android.arch.core:core-testing:$architecture_version"
    testImplementation "android.arch.persistence.room:testing:$room_version"
    //noinspection GradleCompatible
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "android.arch.lifecycle:extensions:$architecture_version"
    implementation "android.arch.lifecycle:viewmodel:$architecture_version"
    implementation "android.arch.lifecycle:livedata:$architecture_version"
    kapt "android.arch.lifecycle:compiler:$architecture_version"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.paging:runtime:1.0.0-alpha6"
    kapt "com.android.databinding:compiler:$android_plugin_version"
}

def ksFile = rootProject.file('signing.properties')
def props = new Properties()
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))
    if (props != null) {
        android.signingConfigs.sign.storeFile file(props['KEYSTORE_FILE'])
        android.signingConfigs.sign.storePassword props['KEYSTORE_PASSWORD']
        android.signingConfigs.sign.keyAlias props['KEYSTORE_ALIAS']
        android.signingConfigs.sign.keyPassword props['KEYSTORE_ALIAS_PASSWORD']
    } else {
        println 'some entries in \'signing.properties\' not found!'
    }
} else {
    println '\'signing.properties\' not found!'
}
